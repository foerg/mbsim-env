<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<MBSimProject xmlns="http://www.mbsim-env.de/MBSimXML" name="Project">

  <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils">
    <Parameter>
      <scalarParameter name="modes">2</scalarParameter>
    </Parameter>
    <DynamicSystemSolver xmlns="http://www.mbsim-env.de/MBSim" name="MBS">
      <plotFeatureRecursive value="generalizedRelativePosition">true</plotFeatureRecursive>
      <plotFeatureRecursive value="generalizedRelativeVelocity">true</plotFeatureRecursive>
      <plotFeatureRecursive value="generalizedForce">true</plotFeatureRecursive>
      <plotFeatureRecursive value="generalizedPosition">true</plotFeatureRecursive>
      <plotFeatureRecursive value="generalizedVelocity">true</plotFeatureRecursive>
      <frames/>
      <contours/>
      <groups/>
      <objects>
        <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils">
          <Parameter>
            <matrixParameter name="u0">
              <fromFile href="u0.dat"/>
            </matrixParameter>
            <matrixParameter name="V">
              <fromFile href="modeShapeMatrix.dat"/>
            </matrixParameter>
            <matrixParameter name="Kmat">
              <fromFile href="stiffnessMatrix.dat"/>
            </matrixParameter>
            <matrixParameter name="mij">
              <fromFile href="mij.dat"/>
            </matrixParameter>
            <scalarParameter name="nf">size(u0,1)</scalarParameter>
            <scalarParameter name="integrals">
id = fopen('data.asc')
if(id==-1)

nn = size(mij,1);
nm = size(V,2);
I = [1:modes]';

K = zeros(3*nn);
for i=1:size(Kmat,1)
  z = Kmat(i,:);
  K(3*z(1)+z(2)-3,3*z(3)+z(4)-3) = z(5);
  K(3*z(3)+z(4)-3,3*z(1)+z(2)-3) = z(5);
end

Pdm = zeros(3,nm);
rdm = zeros(3,1);
rrdm = zeros(3);
for j = 1:nn
  Pdm += mij(j)*V(3*(j-1)+1:3*(j-1)+3,:);
  rdm += mij(j)*u0(j,:)';
  rrdm += mij(j)*u0(j,:)'*u0(j,:);
end

for k = 1:3
  rPdm{k} = zeros(3,nm);
  for j = 1:nn
    rPdm{k} += mij(j)*u0(j,k)*V(3*(j-1)+1:3*(j-1)+3,:);
  end
  for l = 1:3
    PPdm{k,l} = zeros(nm);
    for j = 1:nn
      PPdm{k,l} += mij(j)*V(3*(j-1)+k:3*(j-1)+k,:)'*V(3*(j-1)+l:3*(j-1)+l,:);
    end
  end
end

m = sum(mij);

Ke = V'*K*V;
Ke = triu(Ke,1)'+triu(Ke,0);

Pdm = Pdm(:,I);
Ke = Ke(I,I);
 for i=1:3
rPdm{i} = rPdm{i}(:,I);
for j=1:3
PPdm{i,j} = PPdm{i,j}(I,I);
end
end

save -text 'data.asc' m
save -append -text 'data.asc' rdm
save -append -text 'data.asc' rrdm
save -append -text 'data.asc' Pdm
save -append -text 'data.asc' rPdm
save -append -text 'data.asc' PPdm
save -append -text 'data.asc' Ke

else
fclose(id)
end
ret = 0;</scalarParameter>
          </Parameter>
          <FlexibleFfrBody xmlns="http://www.mbsim-env.de/MBSimFlexibleBody" name="Body">
            <generalizedInitialPosition xmlns="http://www.mbsim-env.de/MBSim">[-1.22786;0]</generalizedInitialPosition>
            <mass unit="kg">load('data.asc','m').m</mass>
            <positionIntegral>load('data.asc','rdm').rdm</positionIntegral>
            <positionPositionIntegral unit="kg*m^2">load('data.asc','rrdm').rrdm</positionPositionIntegral>
            <shapeFunctionIntegral>load('data.asc','Pdm').Pdm</shapeFunctionIntegral>
            <positionShapeFunctionIntegralArray>
              <ele>load('data.asc','rPdm').rPdm{1}
</ele>
              <ele>load('data.asc','rPdm').rPdm{2}</ele>
              <ele>load('data.asc','rPdm').rPdm{3}</ele>
            </positionShapeFunctionIntegralArray>
            <shapeFunctionShapeFunctionIntegralArray>
              <row>
                <ele>load('data.asc','PPdm').PPdm{1,1}</ele>
                <ele>load('data.asc','PPdm').PPdm{1,2}</ele>
                <ele>load('data.asc','PPdm').PPdm{1,3}</ele>
              </row>
              <row>
                <ele>load('data.asc','PPdm').PPdm{2,1}</ele>
                <ele>load('data.asc','PPdm').PPdm{2,2}</ele>
                <ele>load('data.asc','PPdm').PPdm{2,3}</ele>
              </row>
              <row>
                <ele>load('data.asc','PPdm').PPdm{3,1}</ele>
                <ele>load('data.asc','PPdm').PPdm{3,2}</ele>
                <ele>load('data.asc','PPdm').PPdm{3,3}</ele>
              </row>
            </shapeFunctionShapeFunctionIntegralArray>
            <stiffnessMatrix>load('data.asc','Ke').Ke</stiffnessMatrix>
            <proportionalDamping>
              <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                <ele>0.01</ele>
                <ele>0.3</ele>
              </xmlVector>
            </proportionalDamping>
            <nodalRelativePosition>
              u0'(:)
            </nodalRelativePosition>
            <nodalShapeMatrixOfTranslation>
              V(:,1:modes)
            </nodalShapeMatrixOfTranslation>
            <frames>
            </frames><contours>
              <FlexibleSpatialNurbsContour name="FlexibleSpatialNurbsContour" xmlns="http://www.mbsim-env.de/MBSimFlexibleBody">
                <thickness xmlns="http://www.mbsim-env.de/MBSim" unit="m">1</thickness>
                <interpolation>true</interpolation>
                <nodeNumbers>
[   
   112    58   234    72   139
   113    57   233    73   140
   114    56   232    74   141
   115    55   231    75   142
   116    54   230    76   143
   ]
                </nodeNumbers>
                <etaDegree>3</etaDegree>
                <xiDegree>3</xiDegree>
                <openEta>true</openEta>
                <openXi>true</openXi>
                <enableOpenMBV/>
              </FlexibleSpatialNurbsContour>
            </contours><openMBVFlexibleBody>
              <DynamicPointSet xmlns="http://www.mbsim-env.de/OpenMBV" name="DynamicPointSet2" pointSize="3">
                <transparency unit="-">0.3</transparency>
              </DynamicPointSet>
            </openMBVFlexibleBody>
          </FlexibleFfrBody>
        </Embed>
        <RigidBody name="RigidBody">
          <generalizedInitialPosition>
            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
              <ele>70</ele>
              <ele>10</ele>
              <ele>7</ele>
            </xmlVector>
          </generalizedInitialPosition>
          <generalizedInitialVelocity>
            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
              <ele>0</ele>
              <ele>-50</ele>
              <ele>0</ele>
            </xmlVector>
          </generalizedInitialVelocity>
          <mass unit="kg">5000000</mass>
          <inertiaTensor unit="kg*m^2">
            <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
              <row>
                <ele>0.01</ele>
                <ele>0</ele>
                <ele>0</ele>
              </row>
              <row>
                <ele>0</ele>
                <ele>0.01</ele>
                <ele>0</ele>
              </row>
              <row>
                <ele>0</ele>
                <ele>0</ele>
                <ele>0.01</ele>
              </row>
            </xmlMatrix>
          </inertiaTensor>
          <stateDependentTranslation>
            <TranslationAlongAxesXYZ/>
          </stateDependentTranslation>
          <frames/>
          <contours>
            <Point name="Point">
              <enableOpenMBV/>
            </Point>
          </contours><enableOpenMBVFrameC/>
        </RigidBody>
      </objects>
      <links>
        <Contact name="Contact">
          <connect ref1="../Object[Body]/Contour[FlexibleSpatialNurbsContour]" ref2="../Object[RigidBody]/Contour[Point]"/>
          <normalForceLaw>
            <UnilateralConstraint/>
          </normalForceLaw>
          <normalImpactLaw>
            <UnilateralNewtonImpact>
              <restitutionCoefficient>0</restitutionCoefficient>
            </UnilateralNewtonImpact>
          </normalImpactLaw>
          <initialGuess>
            <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
              <row>
                <ele>0.5</ele>
                <ele>0.5</ele>
              </row>
            </xmlMatrix>
          </initialGuess>
        </Contact>
      </links><constraints/>
      <observers>
        <ContactObserver name="ContactObserver">
          <contact ref="../Link[Contact]"/>
          <enableOpenMBVContactPoints/>
        </ContactObserver>
        <FrameObserver name="FrameObserver">
          <frame ref="../Object[RigidBody]/Frame[C]"/>
        </FrameObserver>
      </observers><enableOpenMBVFrameI/>
      <environments>
        <MBSimEnvironment>
          
          
          
          <accelerationOfGravity unit="m/s^2">
            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
              <ele>0</ele>
              <ele>-9.81</ele>
              <ele>0</ele>
            </xmlVector>
          </accelerationOfGravity>
        </MBSimEnvironment>
      </environments>
      <projectionTolerance>1e-15</projectionTolerance>
      <generalizedRelativePositionTolerance>1e-6</generalizedRelativePositionTolerance>
      <generalizedRelativeVelocityTolerance>1e-6</generalizedRelativeVelocityTolerance>
      <generalizedRelativeAccelerationTolerance>1e-8</generalizedRelativeAccelerationTolerance>
      <generalizedForceTolerance>1e-8</generalizedForceTolerance>
      <generalizedImpulseTolerance>1e-6</generalizedImpulseTolerance>
    </DynamicSystemSolver>
  </Embed>

  <DOPRI5Integrator xmlns="http://www.mbsim-env.de/MBSim">
    <startTime unit="s">0</startTime>
    <endTime unit="s">5</endTime>
    <plotStepSize unit="s">1e-2</plotStepSize>
  </DOPRI5Integrator>

</MBSimProject>
