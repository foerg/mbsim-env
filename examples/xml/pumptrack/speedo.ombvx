<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<IvScreenAnnotation name="{name}" xmlns="http://www.mbsim-env.de/OpenMBV">
  <scale1To1At>[1,1]</scale1To1At>
  <ivContent>
import numpy
import math

# see speedo.ombvpx for parameters

dR=0.35
bgCoord=""
bgCoordIdx=""
idx=0
for a in numpy.linspace(180+45+10, -45-10, 100)*math.pi/180:
  bgCoord+=str(math.cos(a))+" "+str(math.sin(a))+" 0\n"
  bgCoordIdx+=" "+str(idx)
  idx+=1
for a in numpy.linspace(-45-10, 180+45+10, 100)*math.pi/180:
  bgCoord+=str((1-dR)*math.cos(a))+" "+str((1-dR)*math.sin(a))+" 0\n"
  bgCoordIdx+=" "+str(idx)
  idx+=1
bgCoordIdx+=" -1"

dr=0.05
fgCoord=""
fgCoordIdx=""
idx=0
da=dr/2/(1-2*dr)*180/math.pi
for a in numpy.linspace(180+45+da, -45-da, 100)*math.pi/180:
  fgCoord+=str((1-dr)*math.cos(a))+" "+str((1-dr)*math.sin(a))+" 0\n"
  fgCoordIdx+=" "+str(idx)
  idx+=1
for a in numpy.linspace(-45-da, 180+45+da, 100)*math.pi/180:
  fgCoord+=str((1-2*dr)*math.cos(a))+" "+str((1-2*dr)*math.sin(a))+" 0\n"
  fgCoordIdx+=" "+str(idx)
  idx+=1
fgCoordIdx+=" -1"

content=f'''#Inventor V2.0 ascii
Translation {{
  translation {position[0]} {position[1]} 0
}}
Scale {{
  scaleFactor {size} {size} 1
}}
Material {{
  emissiveColor 0 0 0
  transparency {alpha}
}}
IndexedTesselationFace {{
  windingRule ODD
  coordinate [
    @bgCoord@
  ]
  coordIndex [
    @bgCoordIdx@
  ]
}}
Material {{
  emissiveColor 1 1 1
  transparency {alpha}
}}
IndexedTesselationFace {{
  windingRule ODD
  coordinate [
    @fgCoord@
  ]
  coordIndex [
    @fgCoordIdx@
  ]
}}
FontStyle {{
  size 1
  family SANS
  style NONE
}}
Coordinate3 {{
  point [
    {1-3*dr} {-dr/2} 0
    {1-2*dr} {-dr/2} 0
    {1-2*dr} {dr/2}  0
    {1-3*dr} {dr/2}  0
  ]
}}
'''

content=content.replace("@bgCoord@", bgCoord)
content=content.replace("@bgCoordIdx@", bgCoordIdx)
content=content.replace("@fgCoord@", fgCoord)
content=content.replace("@fgCoordIdx@", fgCoordIdx)

ts=0.11
r=numpy.arange(0,vEnd+1e-13,vDelta)
for (v,a) in zip(r, numpy.linspace(180+45,-45,len(r))*math.pi/180):
  content+=f'''
Separator {{
  Translation {{
    translation {(1-dR*0.73)*math.cos(a)} {(1-dR*0.7)*math.sin(a)-ts*0.35} 0
  }}
  Scale {{
    scaleFactor {ts} {ts} 1
  }}
  AsciiText {{
    string "{v:g}"
    justification CENTER
  }}
}}
Separator {{
  RotationXYZ {{
    axis Z
    angle {a}
  }}
  FaceSet {{
    numVertices 4
  }}
}}
'''

content+=f'''
Separator {{
  Material {{
    emissiveColor 0 0 0
    transparency {alpha}
  }}
  RotationXYZ {{
    axis X
    angle 1.570796326794897
  }}
  Cylinder {{
    radius 0.1
    height 0
    parts BOTTOM
  }}
}}
Separator {{
  Material {{
    emissiveColor 1 0 0
    transparency {alpha}
  }}
  RotationXYZ {{
    axis Z
    angle = Calculator {{
      a = USE velocity.value
      expression "oa = {(-45-180-45)*math.pi/180/vEnd*vScale} * a + {(180+45)*math.pi/180}"
    }}.oa
  }}
  Coordinate3 {{
    point [
      0.1      -0.030 0
      {1-3*dr} -0.015 0
      {1-3*dr}  0.015 0
      0.1       0.030 0
    ]
  }}
  FaceSet {{
    numVertices 4
  }}
}}
Separator {{
  Translation {{
    translation 0 -0.75 0
  }}
  Scale {{
    scaleFactor 0.25 0.25 1
  }}
  Material {{
    emissiveColor 0 0 0
    transparency {alpha}
  }}
  FontStyle {{
    size 1
    family SANS
    style BOLD
  }}
  AsciiText {{
    string "{speedoText}"
    justification CENTER
  }}
}}
'''

ret=content
  </ivContent>
  <columnLabel>'velocity'</columnLabel>
</IvScreenAnnotation>
